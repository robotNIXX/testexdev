version: '3.8'

services:
  # Frontend - NuxtJS
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nuxt-frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3000
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
    networks:
      - app-network

  # Backend - Laravel (PHP-FPM)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel-backend
    volumes:
      - ./backend:/var/www/html
      - /var/www/html/vendor
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
    env_file:
      - ./backend/.env
    depends_on:
      - database
    networks:
      - app-network

  # Nginx для Laravel
  nginx-laravel:
    image: nginx:alpine
    container_name: nginx-laravel
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www/html
      - ./nginx/laravel.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - app-network

  # Database - PostgreSQL
  database:
    image: postgres:15-alpine
    container_name: postgres-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_DATABASE:-laravel}
      - POSTGRES_USER=${DB_USERNAME:-laravel}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - app-network

  # Nginx - Reverse Proxy
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - nginx-laravel
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge 